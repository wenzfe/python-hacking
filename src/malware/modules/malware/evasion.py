
import logging
import os
import sys
import inspect




def is_vm():
    return any([detect_vm_linux_through_dev_disk_by_id(), detect_vm_linux_through_system_detect_virt()])


def detect_vm_linux_through_dev_disk_by_id():
    """
    detect virtualization through (internal or external) disks that are connected to the system under /dev/disk/by-id
    
    https://wiki.tcl-lang.org/page/%2Fdev%2Fdisk#:~:text=On%20Linux%20systems%2C%20%2Fdev%2F,in%20more%20user%2Dfriendly%20names.
    https://unix.stackexchange.com/questions/89714/easy-way-to-determine-the-virtualization-technology-of-a-linux-machine
    """
    
    vms = ['vbox', 'qemu']
    cmd = "ls -l /dev/disk/by-id/ | awk '{ print $9 }' "

    output = os.popen(cmd).read().lower().split('\n')
    #print(f"-{output}-", type(output))

    for line in output:
        for vm in vms:
            if vm in line:
                logging.info(f"Found virtualization: {vm}")
                return True
    logging.info(f"Found no virtualization")
    return False

def detect_vm_linux_through_system_detect_virt():
    """
    Linux command to detect virtual machine e.g. VirtualBox
    ------------------------------
    $ > systemd-detect-virt      |
    oracle                       |
    ------------------------------
    https://unix.stackexchange.com/questions/89714/easy-way-to-determine-the-virtualization-technology-of-a-linux-machine
    https://www.freedesktop.org/software/systemd/man/systemd-detect-virt.html

    """
    vms = ["qemu", "kvm", "amazon", "zvm", "vmware", "microsoft", "oracle", "powervm", "xen", "bochs", "uml", "parrallels", "bhyve", "qnx", "acrn"]
    cmd = "systemd-detect-virt"

    output = os.popen(cmd).read().replace('\n', '')
    
    if output in vms:
        logging.info(f"Found virtualization: {output}")
        return True
    logging.info(f"Found no virtualization")
    return False



def is_debugger():
    return any([detect_debugger_gettrace(), detect_debugger_hasattr(), detect_debugger_stack()])

def detect_debugger_gettrace():
    # https://stackoverflow.com/questions/38634988/check-if-program-runs-in-debug-mode
    # https://www.adamsmith.haus/python/answers/how-to-determine-if-code-is-being-run-inside-a-virtual-machine-in-python
    # -> https://virtualenv.pypa.io/en/16.7.9/reference.html
    if sys.gettrace():
        logging.info(f"Found debugger")
        return True
    logging.info(f"Found no debugger")
    return False

def detect_debugger_hasattr():
    if hasattr(sys, 'real_prefix'):            
        logging.info(f"Found debugger")
        return True
    logging.info(f"Found no debugger")
    return False

def detect_debugger_stack():
    # https://stackoverflow.com/questions/333995/how-to-detect-that-python-code-is-being-executed-through-the-debugger
    debuggers = ("pydevd.py", "pdb.py")
    for frame in inspect.stack():
        if frame[1].endswith(debuggers):
            logging.info(f"Found debugger")
            return True
    logging.info(f"Found no debugger")
    return False



if __name__ == '__main__':
    FORMAT = '[%(asctime)s] [%(levelname)-8s] [%(message)s]'
    # filename='/tmp/cc.log'
    logging.basicConfig(stream=sys.stdout, format=FORMAT, level=0)

    print(is_vm())
    print(is_debugger())   